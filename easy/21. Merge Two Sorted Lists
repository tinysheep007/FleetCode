#21.Â Merge Two Sorted Lists

Simply compare the val from both linked list and insert the smaller side

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        
        ListNode ans = new ListNode(0);
        ListNode head = ans;
        
        //keep traversing as long as one of them still has nodes
        while(list1 != null || list2 != null){
            //if list1 runs out
            if(list1 == null){
                //System.out.println("list1 runs out");
                while(list2 != null){
                    ListNode tt2 = new ListNode(list2.val);
                    ans.next = tt2;
                    ans = ans.next;
                    list2 = list2.next;
                }
                break;
            }
            
            
            //if list2 runs out
            if(list2 == null){
                //System.out.println("list2 runs out");
                while(list1 != null){
                    ListNode tt1 = new ListNode(list1.val);
                    ans.next = tt1;
                    ans = ans.next;
                    list1 = list1.next;
                }
                break;
            }
            
            //if they are equal
            if(list1.val == list2.val){
                //System.out.println("comparing "+list1.val+" and "+list2.val+" put in both");
                //add both of them and move cursor
                ListNode temp = new ListNode(list1.val);
                ans.next = temp;
                ans = ans.next;
                list1 = list1.next;
                
                ListNode temp2 = new ListNode(list2.val);
                ans.next = temp2;
                ans = ans.next;
                list2 = list2.next;
            }else if(list1.val < list2.val){
                //System.out.println("comparing "+list1.val+" and "+list2.val+ " put in list1");
                //if list1 is bigger, store val of list1 and only move cursor of 1
                ListNode t1 = new ListNode(list1.val);
                ans.next = t1;
                ans = ans.next;
                list1 = list1.next;
            }else if(list1.val > list2.val){
                //System.out.println("comparing "+list1.val+" and "+list2.val+" put it list 2");
                //if list2 is bigger, store val of list2 and only move cursor of 2
                ListNode t2 = new ListNode(list2.val);
                ans.next = t2;
                ans = ans.next;
                list2 = list2.next;
            }
            
            
            
            
        }
        
        return head.next;
    }
}
